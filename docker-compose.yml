version: '3'

volumes:
  conf:
  data:
  html:
  ipfs:

services:
  db:
    image: postgres:12.2-alpine
    container_name: circles-db
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./db/init-dbs.sh:/docker-entrypoint-initdb.d/init-dbs.sh
      - data:/var/lib/postgresql/data

  api: &api
    build:
      context: ./api
      args:
        - GIT_COMMIT=9e99219
    container_name: circles-api
    restart: unless-stopped
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - VIRTUAL_HOST=${HOST_API}
      - LETSENCRYPT_HOST=${HOST_API}
      - LETSENCRYPT_EMAIL=${SSL_EMAIL}
      - GRAPH_NODE_ENDPOINT=http://graph:8000
    command: ./run.sh

  api-worker:
    <<: *api
    container_name: circles-api-worker
    depends_on:
      - db
      - api
      - graph
    command: ./run-worker.sh

  ipfs:
    image: ipfs/go-ipfs:v0.4.23
    container_name: circles-ipfs-node
    restart: unless-stopped
    ports:
      - "5001:5001"
    volumes:
      - ipfs:/data/ipfs

  graph:
    image: graphprotocol/graph-node:v0.19.0
    container_name: circles-graph-node
    restart: unless-stopped
    depends_on:
      - db
      - ipfs
    ports:
      - "8001:8001"
      - "8020:8020"
      - "8030:8030"
      - "8040:8040"
    environment:
      - LETSENCRYPT_HOST=${HOST_GRAPH_NODE}
      - LETSENCRYPT_EMAIL=${SSL_EMAIL}
      - VIRTUAL_HOST=${HOST_GRAPH_NODE}
      - VIRTUAL_PORT=8000
      - ETHEREUM_POLLING_INTERVAL=25000
      - ethereum=${SUBGRAPH_NETWORK}:${ETHEREUM_NODE_ARCHIVE_ENDPOINT}
      - ipfs=ipfs:5001
      - postgres_db=${POSTGRES_DATABASE_GRAPH_NODE}
      - postgres_host=db:5432
      - postgres_pass=${POSTGRES_PASSWORD}
      - postgres_user=${POSTGRES_USER}
